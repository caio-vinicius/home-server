# https://github.com/linuxserver/reverse-proxy-confs
# Series of "set" for variables are necessary due to nginx crashes in case any location is offline.
# this way, nginx will keep working even if some service is unreachable. 

server {
	listen		80;
	listen		[::]:80;
	server_name	home.server;
	return		301 https://home.server$request_uri;
}

server {
	listen			443 ssl;
	listen			[::]:443 ssl;
	server_name		home.server;
	ssl_certificate		/etc/tls/tls.crt;
	ssl_certificate_key	/etc/tls/tls.key;
	
	resolver		127.0.0.11;

	access_log		/var/log/nginx/access_log.log;

	location / {
		set		$upstream_app homer;
		set		$upstream_port 8080;
		set		$upstream_proto http;
		proxy_pass 	$upstream_proto://$upstream_app:$upstream_port;
	}
	
	location /pihole/ {
		proxy_set_header	Host $http_host;
		proxy_set_header	X-Real-IP $remote_addr;
		proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header	X-Forwarded-Proto $scheme;
		proxy_set_header	X-Forwarded-Host $http_host;
		proxy_pass		http://pihole/admin/;
	}

	# Obs: For this location to work properly, Jellyfin should be set with the base route /jellyfin
	location /jellyfin {
		return 301 $scheme://$host/jellyfin/;
	}

	location ^~ /jellyfin/ {
		proxy_set_header	Range $http_range;
		proxy_set_header	If-Range $http_if_range;
		set			$upstream_app jellyfin;
		set			$upstream_port 8096;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	# Obs: For this location to work properly, Sonarr should be set with the base route /sonarr
	location ^~ /sonarr {
		set			$upstream_app sonarr;
		set			$upstream_port 8989;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	location ^~ /sonarr/api {
		set			$upstream_app sonarr;
		set			$upstream_port 8989;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}
	
	# Obs: For this location to work properly, Radarr should be set with the base route /radarr
	location ^~ /radarr {
		set			$upstream_app radarr;
		set			$upstream_port 7878;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	location ^~ /radarr/api {
		set			$upstream_app radarr;
		set			$upstream_port 7878;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	# For this location to work properly, Ombi should be set with the base route /ombi
	# Here there are many similar routes. I could use regex, but I don't want the performace penalty, especially for RaspberryPi, so there's.
	location /ombi {
		return 301 $scheme://$host/ombi/;
	}

	location ^~ /ombi/ {
		set			$upstream_app ombi;
		set			$upstream_port 3579;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	location ^~ /ombi/api {
		set			$upstream_app ombi;
		set			$upstream_port 3579;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	if ($http_referer ~* /ombi) {
	    rewrite ^/api/(.*) /ombi/api/$1? redirect;
	}

	location ^~ /ombi/swagger {
		set			$upstream_app ombi;
		set			$upstream_port 3579;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	if ($http_referer ~* /ombi) {
		rewrite ^/swagger/(.*) /ombi/swagger/$1? redirect;
	}

	# Deluge does not require base url changes	
	location /deluge {
		return 301 $scheme://$host/deluge/;
	}

	location ^~ /deluge/ {
		set			$upstream_app deluge;
		set			$upstream_port 8112;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
		rewrite			/deluge(.*) $1 break;
		proxy_set_header	X-Deluge-Base "/deluge/";
	}
	
	# For this location to work properly, Jackett should be set with the base route /jackett
	location ^~ /jackett {
		set			$upstream_app jackett;
		set			$upstream_port 9117;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	location ^~ /jackett/api {
		set			$upstream_app jackett;
		set			$upstream_port 9117;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}

	location ^~ /jackett/dl {
		set			$upstream_app jackett;
		set			$upstream_port 9117;
		set			$upstream_proto http;
		proxy_pass 		$upstream_proto://$upstream_app:$upstream_port;
	}
}
